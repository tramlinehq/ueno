---
format_version: "11"
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git
project_type: flutter
workflows:
  debug_firebase_tramline_no_artifact:
    envs:
      - FIREBASE_CREDENTIALS_JSON: $FIREBASE_SERVICE_ACCOUNT
      - FIREBASE_APP_ID: $FIREBASE_APP_ID
    steps:
      - git-clone@8.0: {}
      - script@1:
          inputs:
            - content: |-
                #!/usr/bin/env bash
                # fail if any commands fails
                set -e
                # make pipeline return status equal the last command to exit with a non-zero status, or zero if all commands exit successfully
                set -o pipefail
                # debug log
                set -x

                echo version code -- $versionCode
                echo version name -- $versionName
      - flutter-installer@0:
          inputs:
            - installation_bundle_url: https://storage.googleapis.com/flutter_infra_release/releases/stable/linux/flutter_linux_3.22.0-stable.tar.xz
            - is_update: "false"
      - flutter-build@0:
          inputs:
            - project_location: $BITRISE_FLUTTER_PROJECT_LOCATION
            - platform: android
            - android_additional_params: --build-number=$versionCode --build-name=$versionName  --debug --flavor prod
            - is_debug_mode: "true"
          is_always_run: true
      - script@1:
          title: Send to firebase (tramline inputs)
          inputs:
            - content: |
                #!/usr/bin/env bash
                # fail if any commands fails
                set -e
                # make pipeline return status equal the last command to exit with a non-zero status, or zero if all commands exit successfully
                set -o pipefail
                # debug log
                set -x

                cd android
                bundle install && bundle exec fastlane android distribute_to_firebase
      - cache-push@2: {}
  debug_firebase:
    envs:
      - BUILD_NUMBER: $BITRISE_BUILD_NUMBER
      - FIREBASE_CREDENTIALS_JSON: $FIREBASE_SERVICE_ACCOUNT
      - FIREBASE_APP_ID: $FIREBASE_APP_ID
    steps:
      - git-clone@8.0: {}
      - script@1:
          inputs:
            - content: |-
                #!/usr/bin/env bash
                # fail if any commands fails
                set -e
                # make pipeline return status equal the last command to exit with a non-zero status, or zero if all commands exit successfully
                set -o pipefail
                set -x

                echo version code -- $versionCode
                echo version name -- $versionName
                echo BUILD_NUMBER -- $BUILD_NUMBER
      - flutter-installer@0:
          inputs:
            - installation_bundle_url: https://storage.googleapis.com/flutter_infra_release/releases/stable/linux/flutter_linux_3.22.0-stable.tar.xz
            - is_update: "false"
      - flutter-build@0:
          inputs:
            - project_location: $BITRISE_FLUTTER_PROJECT_LOCATION
            - platform: android
            - android_additional_params: --build-number=$BUILD_NUMBER --build-name=$versionName  --debug --flavor prod
            - is_debug_mode: "true"
          is_always_run: true
      - script@1:
          title: Send to firebase
          inputs:
            - content: |
                #!/usr/bin/env bash
                # fail if any commands fails
                set -e
                # make pipeline return status equal the last command to exit with a non-zero status, or zero if all commands exit successfully
                set -o pipefail
                # debug log
                set -x

                cd android
                bundle install && bundle exec fastlane android distribute_to_firebase
      - cache-push@2: {}
      - deploy-to-bitrise-io@2: {}
  debug_firebase_no_artifact:
    envs:
      - BUILD_NUMBER: $BITRISE_BUILD_NUMBER
      - FIREBASE_CREDENTIALS_JSON: $FIREBASE_SERVICE_ACCOUNT
      - FIREBASE_APP_ID: $FIREBASE_APP_ID
    steps:
      - git-clone@8.0: {}
      - script@1:
          inputs:
            - content: |-
                #!/usr/bin/env bash
                # fail if any commands fails
                set -e
                # make pipeline return status equal the last command to exit with a non-zero status, or zero if all commands exit successfully
                set -o pipefail
                # debug log
                set -x

                echo version code -- $versionCode
                echo version name -- $versionName
                echo BUILD_NUMBER -- $BUILD_NUMBER
      - flutter-installer@0:
          inputs:
            - installation_bundle_url: https://storage.googleapis.com/flutter_infra_release/releases/stable/linux/flutter_linux_3.22.0-stable.tar.xz
            - is_update: "false"
      - flutter-build@0:
          inputs:
            - project_location: $BITRISE_FLUTTER_PROJECT_LOCATION
            - platform: android
            - android_additional_params: --build-number=$BUILD_NUMBER --build-name=$versionName  --debug --flavor prod
            - is_debug_mode: "true"
          is_always_run: true
      - script@1:
          title: Send to firebase
          inputs:
            - content: |
                #!/usr/bin/env bash
                # fail if any commands fails
                set -e
                # make pipeline return status equal the last command to exit with a non-zero status, or zero if all commands exit successfully
                set -o pipefail
                # debug log
                set -x

                cd android
                bundle install && bundle exec fastlane android distribute_to_firebase
      - cache-push@2: {}
  debug:
    steps:
      - git-clone@8.0: {}
      - script@1:
          inputs:
            - content: |-
                #!/usr/bin/env bash
                # fail if any commands fails
                set -e
                # make pipeline return status equal the last command to exit with a non-zero status, or zero if all commands exit successfully
                set -o pipefail
                # debug log
                set -x

                echo version code -- $versionCode
                echo version name -- $versionName
      - flutter-installer@0:
          inputs:
            - installation_bundle_url: https://storage.googleapis.com/flutter_infra_release/releases/stable/linux/flutter_linux_3.22.0-stable.tar.xz
            - is_update: "false"
      - flutter-build@0:
          inputs:
            - project_location: $BITRISE_FLUTTER_PROJECT_LOCATION
            - platform: android
            - android_additional_params: --build-number=$versionCode --build-name=$versionName  --debug --flavor prod
            - is_debug_mode: "true"
          is_always_run: true
      - cache-push@2: {}
      - deploy-to-bitrise-io@2: {}
  debug_no_artifact:
    steps:
      - git-clone@8.0: {}
      - script@1:
          inputs:
            - content: |-
                #!/usr/bin/env bash
                # fail if any commands fails
                set -e
                # make pipeline return status equal the last command to exit with a non-zero status, or zero if all commands exit successfully
                set -o pipefail
                # debug log
                set -x

                echo version code -- $versionCode
                echo version name -- $versionName
      - flutter-installer@0:
          inputs:
            - installation_bundle_url: https://storage.googleapis.com/flutter_infra_release/releases/stable/linux/flutter_linux_3.22.0-stable.tar.xz
            - is_update: "false"
      - flutter-build@0:
          inputs:
            - project_location: $BITRISE_FLUTTER_PROJECT_LOCATION
            - platform: android
            - android_additional_params: --build-number=$versionCode --build-name=$versionName  --debug --flavor prod
            - is_debug_mode: "true"
          is_always_run: true
      - cache-push@2: {}
  release:
    steps:
      - git-clone@8.0: {}
      - flutter-installer@0:
          inputs:
            - installation_bundle_url: https://storage.googleapis.com/flutter_infra_release/releases/stable/linux/flutter_linux_3.22.0-stable.tar.xz
            - is_update: "false"
      - file-downloader:
          inputs:
            - source: $BITRISEIO_ANDROID_KEYSTORE_URL
            - destination: $BITRISE_SOURCE_DIR/android/app/ueno-upload-keystore.jks
      - file-downloader@1:
          inputs:
            - destination: $BITRISE_SOURCE_DIR/android/key.properties
            - source: $BITRISEIO_KEY_PROPERTIES_URL
      - script@1:
          inputs:
            - content: |-
                #!/usr/bin/env bash
                # fail if any commands fails
                set -e
                # make pipelines return status equal the last command to exit with a non-zero status, or zero if all commands exit successfully
                set -o pipefail
                # debug log
                set -x

                echo version code -- $versionCode
                echo version name -- $versionName
      - flutter-build@0:
          inputs:
            - project_location: $BITRISE_FLUTTER_PROJECT_LOCATION
            - platform: android
            - android_output_type: appbundle
            - additional_build_params: --build-number=$versionCode --build-name=$versionName --flavor prod
            - is_debug_mode: "true"
      - cache-pull@2: {}
      - cache-push@2: {}
      - deploy-to-bitrise-io@2: {}
  release_play_store:
    envs:
      - BUILD_NUMBER: $BITRISE_BUILD_NUMBER
      - GOOGLE_SERVICE_ACCOUNT_JSON: $GOOGLE_SERVICE_ACCOUNT_JSON
    steps:
      - git-clone@8.0: {}
      - flutter-installer@0:
          inputs:
            - installation_bundle_url: https://storage.googleapis.com/flutter_infra_release/releases/stable/linux/flutter_linux_3.22.0-stable.tar.xz
            - is_update: "false"
      - file-downloader:
          inputs:
            - source: $BITRISEIO_ANDROID_KEYSTORE_URL
            - destination: $BITRISE_SOURCE_DIR/android/app/ueno-upload-keystore.jks
      - file-downloader@1:
          inputs:
            - destination: $BITRISE_SOURCE_DIR/android/key.properties
            - source: $BITRISEIO_KEY_PROPERTIES_URL
      - script@1:
          inputs:
            - content: |-
                #!/usr/bin/env bash
                # fail if any commands fails
                set -e
                # make pipelines return status equal the last command to exit with a non-zero status, or zero if all commands exit successfully
                set -o pipefail
                # debug log
                set -x

                echo version code -- $versionCode
                echo version name -- $versionName
                echo BUILD_NUMBER -- $BUILD_NUMBER
      - flutter-build@0:
          inputs:
            - project_location: $BITRISE_FLUTTER_PROJECT_LOCATION
            - platform: android
            - android_output_type: appbundle
            - additional_build_params: --build-number=$BUILD_NUMBER --build-name=$versionName --flavor prod
            - is_debug_mode: "true"
      - script@1:
          title: Send to Play Store
          inputs:
            - content: |
                #!/usr/bin/env bash
                # fail if any commands fails
                set -e
                # make pipeline return status equal the last command to exit with a non-zero status, or zero if all commands exit successfully
                set -o pipefail
                # debug log
                set -x

                cd android
                bundle install && bundle exec fastlane android distribute_to_play_store
      - cache-pull@2: {}
      - cache-push@2: {}
      - deploy-to-bitrise-io@2: {}
  release_play_store_tramline_no_artifact:
    envs:
      - GOOGLE_SERVICE_ACCOUNT_JSON: $GOOGLE_SERVICE_ACCOUNT_JSON
    steps:
      - git-clone@8.0: {}
      - flutter-installer@0:
          inputs:
            - installation_bundle_url: https://storage.googleapis.com/flutter_infra_release/releases/stable/linux/flutter_linux_3.22.0-stable.tar.xz
            - is_update: "false"
      - file-downloader:
          inputs:
            - source: $BITRISEIO_ANDROID_KEYSTORE_URL
            - destination: $BITRISE_SOURCE_DIR/android/app/ueno-upload-keystore.jks
      - file-downloader@1:
          inputs:
            - destination: $BITRISE_SOURCE_DIR/android/key.properties
            - source: $BITRISEIO_KEY_PROPERTIES_URL
      - script@1:
          inputs:
            - content: |-
                #!/usr/bin/env bash
                # fail if any commands fails
                set -e
                # make pipelines return status equal the last command to exit with a non-zero status, or zero if all commands exit successfully
                set -o pipefail
                # debug log
                set -x

                echo version code -- $versionCode
                echo version name -- $versionName
      - flutter-build@0:
          inputs:
            - project_location: $BITRISE_FLUTTER_PROJECT_LOCATION
            - platform: android
            - android_output_type: appbundle
            - additional_build_params: --build-number=$versionCode --build-name=$versionName --flavor prod
            - is_debug_mode: "true"
      - script@1:
          title: Send to Play Store (tramline inputs)
          inputs:
            - content: |
                #!/usr/bin/env bash
                # fail if any commands fails
                set -e
                # make pipeline return status equal the last command to exit with a non-zero status, or zero if all commands exit successfully
                set -o pipefail
                # debug log
                set -x

                cd android
                bundle install && bundle exec fastlane android distribute_to_play_store
      - cache-pull@2: {}
      - cache-push@2: {}
  no_op:
    steps:
      - activate-ssh-key@4: {}
      - git-clone@8.0: {}
      - script@1:
          inputs:
            - content: |-
                #!/usr/bin/env bash
                # fail if any commands fails
                set -e
                # make pipeline return status equal the last command to exit with a non-zero status, or zero if all commands exit successfully
                set -o pipefail
                set -x
                # write your script here
                echo version code -- $versionCode
                echo version name -- $versionName
      - deploy-to-bitrise-io@2: {}
meta:
  bitrise.io:
    stack: linux-docker-android-20.04
app:
  envs:
    - opts:
        is_expand: false
      BITRISE_FLUTTER_PROJECT_LOCATION: .
pipelines:
  build-and-deploy-pipeline:
    workflows:
      debug_firebase_no_artifact: {}
      release_play_store: {}
  build-and-deploy-tramline-no-artifact:
    workflows:
      debug_firebase_tramline_no_artifact: {}
      release_play_store_tramline_no_artifact: {}
